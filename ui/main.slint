
export component MemoryTile inherits Rectangle {
    in property <bool> open_curtain;
    in property <bool> solved;
    in property <image> icon;
    callback clicked;


    width: 64px;
    height: 64px;
    background: root.solved ? #34CE57 : #3960D5;
    border-radius: 8px;
    animate background { duration: 800ms; }
    Image {
        source: root.icon;
        width: parent.width;
        height: parent.height;
    }

    Rectangle {
        x: 0px;
        height: parent.height;
        background: #193076;
        width: root.open_curtain ? 0px : (parent.width / 2);
        animate width { duration: 250ms; easing: ease-in; }
        clip: true;

        Image {
            x: 16px;
            y: 16px;
            source: @image-url("../icons/tile_logo.png");
        }
    }

    right_curtain := Rectangle {
        background: #193076;
        x: root.open_curtain ? parent.width : (parent.width / 2);
        width: root.open_curtain ? 0px : (parent.width / 2);
        height: parent.height;
        animate width { duration: 250ms; easing: ease-in; }
        animate x { duration: 250ms; easing: ease-in; }
        clip: true;

         Image {
            x: right_curtain.width - self.width - 16px;
            y: 16px;
            source: @image-url("../icons/tile_logo.png");
        }
    }
    TouchArea {
        clicked => {
            root.clicked();
        }

        width: 100%;
        height: 100%;
    }
}

export struct TileData {
    image: image,
    image_visible: bool,
    solved: bool,
}

export component MainWindow inherits Window {
    in property <bool> disable_tiles;
    in property <[TileData]> memory_tiles: [
        { image: @image-url("../icons/at.png") },
        { image: @image-url("../icons/balance-scale.png") },
        { image: @image-url("../icons/bicycle.png") },
        { image: @image-url("../icons/bus.png") },
        { image: @image-url("../icons/cloud.png") },
        { image: @image-url("../icons/cogs.png") },
        { image: @image-url("../icons/motorcycle.png") },
        { image: @image-url("../icons/video.png") },
    ];
    callback check_if_pair_solved();

    width: 326px;
    height: 326px;

    for tile[i] in root.memory_tiles: MemoryTile  {
        x: mod(i, 4) * 74px;
        y: floor(i / 4) * 74px;
        width: 64px;
        height: 64px;
        icon: tile.image;
        open_curtain: tile.image_visible || tile.solved;        // propagate the solved status from the model to the tile
        solved: tile.solved;
        clicked => {
            if (!root.disable_tiles) {
                tile.image_visible = !tile.image_visible;
                root.check_if_pair_solved();
            }
        }
    }
}
